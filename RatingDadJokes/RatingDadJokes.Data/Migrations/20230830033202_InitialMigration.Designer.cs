// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RatingDadJokes.Data;

#nullable disable

namespace RatingDadJokes.Data.Migrations
{
    [DbContext(typeof(RatingDadJokesDbContext))]
    [Migration("20230830033202_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("RatingDadJokes.Data.Model.Joke", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Punchline")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Setup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JOKES");
                });

            modelBuilder.Entity("RatingDadJokes.Data.Model.Rating", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("JokeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Stars")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JokeId");

                    b.ToTable("RATINGS");
                });

            modelBuilder.Entity("RatingDadJokes.Data.Model.Rating", b =>
                {
                    b.HasOne("RatingDadJokes.Data.Model.Joke", "Joke")
                        .WithMany()
                        .HasForeignKey("JokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joke");
                });
#pragma warning restore 612, 618
        }
    }
}
